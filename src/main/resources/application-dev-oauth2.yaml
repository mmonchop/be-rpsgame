info:
  app:
    name: RpsGame - Backend
    description: Rock Paper Scissors game - Spring Boot Application

server:
  port: 8080

spring:
  mvc:
    cors: '/**'
    allowedOrigins: http://localhost:4200/
  data:
    mongodb:
      uri: mongodb://localhost:27017/?readPreference=primary&ssl=false
      database: rpsgame
  security:
    scheme: oauth2
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.microsoftonline.com/d9671427-bbc1-42b0-8fac-322502dcff43/v2.0
      client:
        auth-url: https://login.microsoftonline.com/d9671427-bbc1-42b0-8fac-322502dcff43/oauth2/v2.0/authorize
        token-url: https://login.microsoftonline.com/d9671427-bbc1-42b0-8fac-322502dcff43/oauth2/v2.0/token
        client-id: b81d2364-cc92-4509-9aaf-937ab827a7c0
        client-secret: ${AZURE_AD_CLIENT_SECRET}
        scope: api://b81d2364-cc92-4509-9aaf-937ab827a7c0/user.read

rpsgame:
  game-num-rounds: 3
  machine-player-name: HAL 9000
  max-wait-random-player-minutes: 10
  notifications:
    mode: stomp
    stomp:
      broker-url: ws://localhost:${server.port}/websocket-services
      rooms-topic-pattern: /app/rooms/%s/publish
  api-user:
    username: ${API_REST_USERNAME}
    password: ${API_REST_PASSWORD}

springdoc:
  swagger-ui:
    csrf:
      enabled: true
    disable-swagger-default-url: true
    oauth:
      usePkceWithAuthorizationCodeGrant: true
      client-id: b81d2364-cc92-4509-9aaf-937ab827a7c0

management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: info,env,health,prometheus,metrics
  endpoint:
    health:
      show-details: always
  health:
    probes:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

websocket:
  stomp:
    endpoint: /websocket-services
    allowed-origins: http://localhost:4200